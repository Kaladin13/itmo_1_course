		ORG    	0X000; Инициализация начальных значений векторов прерываний

V0:		WORD	$DEFAULT, 0X180
V1:		WORD	$DEFAULT, 0X180
V2:		WORD	$INT2, 0X180
V3:		WORD	$INT3, 0X180
V4:		WORD	$DEFAULT, 0X180
V5:		WORD	$DEFAULT, 0X180
V6:		WORD	$DEFAULT, 0X180
V7:		WORD	$DEFAULT, 0X180

DEFAULT:IRET


		ORG		0X015
X:		WORD	0X031; Адрес элемента, с которым будет работать программа	

START:	DI			 ; Запрещаем прерывания чтобы обеспечить корректную инициализацию
		CLA  		 ; регистров прерываний для контроллеров ВУ

		OUT		0X001; Запрещаем прерывания для неиспользуемых ВУ, записывая
		OUT		0X003; 0 в MR
		OUT		0X00B
		OUT		0X00F
		OUT		0X013
		OUT		0X017
		OUT		0X01B
		OUT		0X01F

		LD		#0X0A ; Разрешаем прерывания для ВУ-2, и задаём второй вектор
		OUT 	0X005; (1000|0010) = (1010) = 0XA

		LD		#0X0B ; Разрешаем прерывания для ВУ-3, и задаём третий вектор
		OUT 	0X007; (1000|0011) = (1011) = 0XB

		JUMP	$PROG; Переходим к основной программе

		ORG		0X040
PROG:	DI			 ; Запрещаем прерывания, чтобы обеспечить атомарность операций
		LD		(X)
		INC			 ; Увеличиваем переменную, и вызываем подпрограмму проверки ОДЗ
		CALL	$CHECK
		ST  	(X)
		HLT			 ; Точка останова для отладки
		EI
		JUMP	PROG ; Повторяем основной цикл выполнения


MIN:	WORD	0XFFEA ; Максимальное и минимальное возможные значения для
MAX:	WORD	0X14 ; обрабатываемого числа при заданой функции F(X)

CHECK:			 	 ; Проверка принадлежности к ОДЗ
		NOP			 ; Точка отладки

		CMP		MAX  ; Загрузка минимума, если X >= MAX
		BLT		CHECKM
		JUMP	LDMIN

CHECKM:	CMP		MIN  ; Загрузка минимума, если X < MIN
		BGE		RETN
		HLT
		JUMP 	LDMIN

RETN:	RET

LDMIN:	NOP
		LD		MIN	 ; Загрузка минимального значения, если X вышел за пределы ОДЗ
		RET


INT2:	DI			 ; Обработка прерываний для ВУ-2
		NOP			 ; Точка отладки

		IN      0X004; Вычисление логического ИЛИ-НЕ
		OR   	(X)
		NOT
		ST 		(X)
		CALL	$CHECK

		NOP
		IRET

VAR1:   WORD    ?    ; Вспомогательная переменная для вычисления значения функции

INT3:	DI			 ; Обработка прерываний для ВУ-3
		NOP			 ; Точка отладки

		LD      (X)	 ; Вычисление F(X) = 6X + 4
		ASL
		ST      VAR1
		ASL
		ADD		VAR1
		ADD		#0X04
		
		OUT		0X006; Вывод полученного значения на ВУ-3
		NOP
		IRET